{"version":3,"sources":["components/Expenses/ExpenseData.js","components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseData","id","title","amount","date","Date","Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","day","toLocaleString","month","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","isActive","onSubmit","preventDefault","expenseData","onSaveExpenseData","type","min","step","onClick","setActive","NewExpense","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"6YAsBeA,EAtBK,CAClB,CACEC,GAAI,KACJC,MAAO,eACPC,OAAQ,MACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CAAEJ,GAAI,KAAMC,MAAO,SAAUC,OAAQ,OAAQC,KAAM,IAAIC,KAAK,KAAM,EAAG,IACrE,CACEJ,GAAI,KACJC,MAAO,gBACPC,OAAQ,OACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CACEJ,GAAI,KACJC,MAAO,oBACPC,OAAQ,IACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,M,eCVbC,EANF,SAACC,GACZ,IAAMC,EAAO,eAAWD,EAAME,WAE9B,OAAO,qBAAKA,UAAWD,EAAhB,SAA0BD,EAAMG,YCiB1BC,G,MApBQ,SAACJ,GAKtB,OACE,qBAAKE,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQG,MAAOL,EAAMM,SAAUC,SARP,SAACC,GAC7BR,EAAMS,eAAeD,EAAME,OAAOL,QAO9B,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4BCCKM,G,MAdK,SAAC,GAAc,IAAZd,EAAW,EAAXA,KACfe,EAAMf,EAAKgB,eAAe,QAAS,CAAED,IAAK,YAC1CE,EAAQjB,EAAKgB,eAAe,QAAS,CAAEC,MAAO,SAC9CC,EAAOlB,EAAKmB,cAElB,OACE,sBAAKd,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCY,IACtC,qBAAKZ,UAAU,qBAAf,SAAqCa,IACrC,qBAAKb,UAAU,oBAAf,SAAoCU,SCO3BK,G,MAdK,SAACjB,GACnB,OACE,6BACE,eAAC,EAAD,CAAME,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaL,KAAMG,EAAMH,OACzB,sBAAKK,UAAU,4BAAf,UACE,6BAAKF,EAAML,QACX,sBAAKO,UAAU,sBAAf,cAAuCF,EAAMJ,oBCaxCsB,G,MArBM,SAAAlB,GACnB,OAA2B,IAAvBA,EAAMmB,MAAMC,OACP,oBAAIlB,UAAU,0BAAd,+BAIP,oBAAIA,UAAU,gBAAd,SAEIF,EAAMmB,MAAME,KAAI,SAAAC,GAAO,OACrB,cAAC,EAAD,CAEE3B,MAAO2B,EAAQ3B,MACfC,OAAQ0B,EAAQ1B,OAChBC,KAAMyB,EAAQzB,MAHTyB,EAAQ5B,W,OCQV6B,G,MAnBE,SAAAvB,GACf,IAAIwB,EAAgB,KAKpB,OAHIxB,EAAMyB,SAAW,IACnBD,EAAa,UAAME,KAAKC,MAAO3B,EAAMK,MAAQL,EAAMyB,SAAY,KAAlD,MAGb,sBAAKvB,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACV0B,MAAO,CAACC,OAAQL,OAGpB,qBAAKtB,UAAU,mBAAf,SAAmCF,EAAM8B,aCGhCC,G,MAhBD,SAAA/B,GACZ,IAAMgC,EAAkBhC,EAAMiC,WAAWZ,KAAI,SAAAa,GAAS,OAAIA,EAAU7B,SAC9D8B,EAAWT,KAAKU,IAAL,MAAAV,KAAI,YAAQM,IAC7B,OACE,qBAAK9B,UAAU,QAAf,SACGF,EAAMiC,WAAWZ,KAAI,SAAAa,GAAS,OAC7B,cAAC,EAAD,CAEE7B,MAAO6B,EAAU7B,MACjBoB,SAAUU,EACVL,MAAOI,EAAUJ,OAHZI,EAAUJ,cCgBVO,EAxBO,SAAArC,GACpB,IAD6B,EACvBsC,EAAkB,CACtB,CAAER,MAAO,MAAOzB,MAAO,GACvB,CAAEyB,MAAO,MAAOzB,MAAO,GACvB,CAAEyB,MAAO,MAAOzB,MAAO,GACvB,CAAEyB,MAAO,MAAOzB,MAAO,GACvB,CAAEyB,MAAO,MAAOzB,MAAO,GACvB,CAAEyB,MAAO,MAAOzB,MAAO,GACvB,CAAEyB,MAAO,MAAOzB,MAAO,GACvB,CAAEyB,MAAO,MAAOzB,MAAO,GACvB,CAAEyB,MAAO,MAAOzB,MAAO,GACvB,CAAEyB,MAAO,MAAOzB,MAAO,GACvB,CAAEyB,MAAO,MAAOzB,MAAO,GACvB,CAAEyB,MAAO,MAAOzB,MAAO,IAbI,cAgBPL,EAAMuC,UAhBC,IAgB7B,2BAAsC,CAAC,IAA5BjB,EAA2B,QAEpCgB,EADqBhB,EAAQzB,KAAK2C,YACJnC,OAASiB,EAAQ1B,QAlBpB,8BAqB7B,OAAO,cAAC,EAAD,CAAOqC,WAAYK,KCObG,G,MAvBE,SAAC,GAAe,IAAbtB,EAAY,EAAZA,MAAY,EACUuB,mBAAS,QADnB,mBACvBC,EADuB,KACTC,EADS,KAO1BC,EAAmB1B,EAAM2B,QAAO,SAAAxB,GACpC,OAAOA,EAAQzB,KAAKmB,cAAc+B,aAAeJ,KAGjD,OACE,eAAC,EAAD,CAAMzC,UAAU,WAAhB,UACE,cAAC,EAAD,CACEI,SAAUqC,EACVlC,eAZoB,SAAAuC,GAC1BJ,EAAgBI,MAaZ,cAAC,EAAD,CAAeT,SAAUM,IACzB,cAAC,EAAD,CAAc1B,MAAO0B,S,OCuEZI,G,MA7FK,SAACjD,GAAW,IAAD,EACW0C,mBAAS,IADpB,mBACtBQ,EADsB,KACRC,EADQ,OAEaT,mBAAS,IAFtB,mBAEtBU,EAFsB,KAEPC,EAFO,OAGSX,mBAAS,IAHlB,mBAGtBY,EAHsB,KAGTC,EAHS,KAsD7B,OACE,uBAAMrD,UAAc,OAAL,WAAeF,EAAMwD,SAAW,WAAa,IAAMC,SApB9C,SAACjD,GACrBA,EAAMkD,iBAEN,IAAMC,EAAc,CAClBhE,MAAOuD,EACPtD,QAASwD,EACTvD,KAAM,IAAIC,KAAKwD,IAGjBtD,EAAM4D,kBAAkBD,GACxBR,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KAQf,UACE,sBAAKrD,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBAAO2D,KAAK,OACLtD,SAlDY,SAAAC,GACzB2C,EAAgB3C,EAAME,OAAOL,QAkDhBA,MAAO6C,OAGhB,sBAAKhD,UAAU,uBAAf,UACE,2CACA,uBAAO2D,KAAK,SACLC,IAAI,OAAOC,KAAK,OAChB1D,MAAO+C,EACP7C,SAhDa,SAAAC,GAC1B6C,EAAiB7C,EAAME,OAAOL,aAkD1B,sBAAKH,UAAU,uBAAf,UACE,yCACA,uBAAO2D,KAAK,OACLC,IAAI,aACJ1B,IAAI,aACJ/B,MAAOiD,EACP/C,SAlDW,SAAAC,GACxB+C,EAAe/C,EAAME,OAAOL,gBAoD1B,sBAAKH,UAAU,uBAAf,UACE,wBAAQA,UAAU,aACV8D,QAjCQ,WACpBhE,EAAMiE,WAAU,IA+BZ,oBAKA,wBAAQJ,KAAK,SAAb,iCCzDOK,G,MA7BI,SAAClE,GAClB,IAD4B,EASE0C,oBAAS,GATX,mBASrBc,EATqB,KASXS,EATW,KAa5B,OACE,sBAAK/D,UAAU,cAAf,UACE,wBAAQA,UAAc,mBAAL,WAA2BsD,EAAW,SAAW,IAC1DQ,QALU,kBAAMC,GAAU,IAIlC,6BAKA,cAAC,EAAD,CACEL,kBApByB,SAACO,GAC9B,IAAMR,EAAW,2BACZQ,GADY,IAEfzE,GAAIgC,KAAK0C,SAASrB,aAEpB/C,EAAMqE,aAAaV,IAgBfH,SAAUA,EACVS,UAAWA,SCtBbK,EAAiB/B,EAgBRgC,EAdH,WAAO,IAAD,EACgB7B,mBAAS4B,GADzB,mBACT/B,EADS,KACCiC,EADD,KAMhB,OACE,gCACE,cAAC,EAAD,CAAYH,aALU,SAAA/C,GACxBkD,GAAY,SAAAC,GAAY,OAAKnD,GAAL,mBAAiBmD,UAKvC,cAAC,EAAD,CAAUtD,MAAOoB,QCXvBmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a329aaea.chunk.js","sourcesContent":["const ExpenseData = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 8, 7) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 27),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nexport default ExpenseData;\n","import \"./Card.css\";\n\nconst Card = (props) => {\n  const classes = `card ${props.className}`;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import './ExpenseFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by Year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2023'>2023</option>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import \"./ExpenseDate.css\";\n\nconst ExpenseDate = ({ date }) => {\n  const day = date.toLocaleString(\"us-US\", { day: \"2-digit\" });\n  const month = date.toLocaleString(\"us-US\", { month: \"long\" });\n  const year = date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import ExpenseItem from \"./ExpenseItem\";\nimport './ExpensesList.css';\n\nconst ExpensesList = props => {\n  if (props.items.length === 0) {\n    return <h2 className='expenses-list__fallback'>Found no expenses</h2>;\n  }\n\n  return (\n    <ul className='expenses-list'>\n      {\n        props.items.map(expense => (\n          <ExpenseItem\n            key={expense.id}\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n          />\n        ))\n      }\n    </ul>\n  )\n};\n\nexport default ExpensesList;","import './ChartBar.css';\n\nconst ChartBar = props => {\n  let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    barFillHeight = `${Math.round((props.value / props.maxValue) * 100)}%`;\n  }\n  return (\n    <div className='chart-bar'>\n      <div className='chart-bar__inner'>\n        <div\n          className='chart-bar__fill'\n          style={{height: barFillHeight}}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  )\n};\n\nexport default ChartBar;","import ChartBar from \"./ChartBar\";\nimport './Chart.css';\n\nconst Chart = props => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMax = Math.max(...dataPointValues);\n  return (\n    <div className='chart'>\n      {props.dataPoints.map(dataPoint =>\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMax}\n          label={dataPoint.label}\n        />)}\n    </div>\n  )\n};\n\nexport default Chart;","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = props => {\n  const chartDataPoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); // starting at 0 because January => 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />\n};\n\nexport default ExpensesChart;","import {useState} from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport \"./Expenses.css\";\n\nconst Expenses = ({ items }) => {\n  const [filteredYear, setFilteredYear] = useState('2020');\n\nconst filterChangeHandler = selectedYear => {\n  setFilteredYear(selectedYear);\n};\n\nconst filteredExpenses = items.filter(expense => {\n  return expense.date.getFullYear().toString() === filteredYear;\n});\n\n  return (\n    <Card className=\"expenses\">\n      <ExpenseFilter\n        selected={filteredYear}\n        onChangeFilter={filterChangeHandler}\n      />\n      <ExpensesChart expenses={filteredExpenses} />\n      <ExpensesList items={filteredExpenses} />\n    </Card>\n  );\n};\n\nexport default Expenses;\n","import { useState } from \"react\";\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  /*const [userInput, setUserInput] = useState({\n    enteredTitle: '',\n    enteredAmount: '',\n    enteredDate: '',\n  });*/\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n    /*setUserInput({\n      ...userInput,\n      enteredTitle: event.target.value,\n    });*/\n    /*setUserInput(prevState => {\n      return { ...prevState, enteredTitle: event.target.value }\n    });*/\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n    /*setUserInput(prevState => {\n      return { ...prevState, enteredAmount: event.target.value }\n    });*/\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n    /*setUserInput(prevState => {\n      return { ...prevState, enteredDate: event.target.value }\n    });*/\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate)\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  const handleOnClick = () => {\n    props.setActive(true);\n  }\n\n  return (\n    <form className={`${\"form\"} ${props.isActive ? \"inactive\" : \"\"}`} onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\"\n                 onChange={titleChangeHandler}\n                 value={enteredTitle}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input type=\"number\"\n                 min=\"0.01\" step=\"0.01\"\n                 value={enteredAmount}\n                 onChange={amountChangeHandler}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input type=\"date\"\n                 min=\"2021-01-01\"\n                 max=\"2025-12-31\"\n                 value={enteredDate}\n                 onChange={dateChangeHandler}/>\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button className=\"cancel-btn\"\n                onClick={handleOnClick}\n        >\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  )\n};\n\nexport default ExpenseForm;","import { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport './NewExpense.css';\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  const [isActive, setActive] = useState(true);\n\n  const handleOnClick = () => setActive(false);\n\n  return (\n    <div className=\"new-expense\">\n      <button className={`${\"new-expense__btn\"} ${isActive ? \"active\" : \"\"}`}\n              onClick={handleOnClick}\n      >\n        Add New Expense\n      </button>\n      <ExpenseForm\n        onSaveExpenseData={saveExpenseDataHandler}\n        isActive={isActive}\n        setActive={setActive}\n      />\n    </div>\n  )\n};\n\nexport default NewExpense;","import {useState} from \"react\";\nimport expenses from \"./components/Expenses/ExpenseData\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = expenses;\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => [expense, ...prevExpenses]);\n  }\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}